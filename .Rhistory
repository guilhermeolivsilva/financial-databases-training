anbimaMercSec = function(date) {
stopifnot(length(date) == 1)
if(class(date) != "Date") {
if(class(date) == "int") {
date = as.Date(as.character(date), "%Y-%m-%d")
} else if(class(date) == "string") {
date = as.Date(date, "%Y-%m-%d")
} else {
return NULL
}
}
url = format(date, "https://www.anbima.com.br/merc_sec/arqs/ms%y%m%d.txt")
dados = read.table(
file = url,
header = T,
sep = "@",
dec = ",",
skip = 2,
stringsAsFactors = F,
na.strings = "--"
)
# Adicionar conversão de datas para o tipo adequado
return(dados)
}
# date = Sys.Date() - 1
anbimaMercSec = function(date) {
stopifnot(length(date) == 1)
if(class(date) != "Date") {
if(class(date) == "int") {
date = as.Date(as.character(date), "%Y-%m-%d")
}
if(class(date) == "string") {
date = as.Date(date, "%Y-%m-%d")
} else {
return NULL
}
}
url = format(date, "https://www.anbima.com.br/merc_sec/arqs/ms%y%m%d.txt")
dados = read.table(
file = url,
header = T,
sep = "@",
dec = ",",
skip = 2,
stringsAsFactors = F,
na.strings = "--"
)
# Adicionar conversão de datas para o tipo adequado
return(dados)
}
# date = Sys.Date() - 1
anbimaMercSec = function(date) {
stopifnot(length(date) == 1)
if(class(date) != "Date") {
if(class(date) == "int") {
date = as.Date(as.character(date), "%Y-%m-%d")
}
if(class(date) == "string") {
date = as.Date(date, "%Y-%m-%d")
} else {
return(NULL)
}
}
url = format(date, "https://www.anbima.com.br/merc_sec/arqs/ms%y%m%d.txt")
dados = read.table(
file = url,
header = T,
sep = "@",
dec = ",",
skip = 2,
stringsAsFactors = F,
na.strings = "--"
)
# Adicionar conversão de datas para o tipo adequado
return(dados)
}
?c
teste = c(c("a", "b"), "c")
teste = c(c("a", "b"), "c", recursive = FALSE)
teste = c(c("a", "b"), "c", recursive = T)
teste = c("c", c("a", "b"), recursive = T)
teste = c("c", c("a", "b"), recursive = F)
library(httr)
url = "http://anbima.com.br/est_termo/CZ-down.asp"
req = POST(
url = url,
body = list(
Idioma = "PT"
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
library(httr)
url = "http://anbima.com.br/est_termo/CZ-down.asp"
req = POST(
url = url,
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
View(req)
library(httr)
url = "http://anbima.com.br/est_termo/CZ-down.asp"
req = POST(
url = url,
encode = "form",
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
View(req)
library(httr)
url = "https://www.anbima.com.br/informacoes/est-termo/CZ-down.asp"
req = POST(
url = url,
encode = "form",
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
View(req)
# date = Sys.Date() - 1
anbimaMercSec = function(date) {
stopifnot(length(date) == 1)
if(class(date) != "Date") {
if(class(date) == "int") {
date = as.Date(as.character(date), "%Y-%m-%d")
}
if(class(date) == "string") {
date = as.Date(date, "%Y-%m-%d")
} else {
return(NULL)
}
}
url = format(date, "https://www.anbima.com.br/informacoes/merc-sec/arqs/ms%y%m%d.txt")
dados = read.table(
file = url,
header = T,
sep = "@",
dec = ",",
skip = 2,
stringsAsFactors = F,
na.strings = "--"
)
# Adicionar conversão de datas para o tipo adequado
return(dados)
}
anbimaMercSec("2018-03-05")
class("2018-03-05")
# date = Sys.Date() - 1
anbimaMercSec = function(date) {
stopifnot(length(date) == 1)
if(class(date) != "Date") {
if(class(date) == "int") {
date = as.Date(as.character(date), "%Y-%m-%d")
}
if(class(date) == "character") {
date = as.Date(date, "%Y-%m-%d")
} else {
return(NULL)
}
}
url = format(date, "https://www.anbima.com.br/informacoes/merc-sec/arqs/ms%y%m%d.txt")
dados = read.table(
file = url,
header = T,
sep = "@",
dec = ",",
skip = 2,
stringsAsFactors = F,
na.strings = "--"
)
# Adicionar conversão de datas para o tipo adequado
return(dados)
}
anbimaMercSec("2018-03-05")
library(httr)
url = "https://www.anbima.com.br/informacoes/est-termo/CZ-down.asp"
req = POST(
url = url,
encode = "form",
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
View(req)
library(httr)
url = "https://www.anbima.com.br/informacoes/est-termo/CZ-down.asp"
req = POST(
url = url,
encode = "form",
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
txt = content(req, as = "text")
library(XML)
doc = xmlParseString(content(req, as = "text"))
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
doc = xmlParseString(content(req, as = "text"))
root = xmlRoot(doc)
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
View(params)
library(httr)
library(XML)
url = "https://www.anbima.com.br/informacoes/est-termo/CZ-down.asp"
req = POST(
url = url,
encode = "form",
body = list(
Idioma = "PT",
Dt_ref = "02/08/2018",
saida = "xml"
)
)
doc = xmlParseString(content(req, as = "text"))
root = xmlRoot(doc)
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
root
root = xmlRoot(doc)[1]
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
root = xmlRoot(doc)
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
doc = xmlParseString(content(req, as = "text", encoding = "UTF-8"))
root = xmlRoot(doc)
params = xmlElementsByTagName(root, "PARAMETRO", recursive = T)
txt = content(req, as = "text", encoding = "UTF-8")
doc = xmlParseString(txt)
root = xmlRoot(doc)
xmlChildren(root)
xmlChildren(xmlChildren(root))
print(as.numeric("0.5"))
as.numeric("0.5") + 5
# POST XML
xml.in = paste0(
"  <parametros>",
"    <name>", name, "</name>",
"    <date>", format(dt, "%Y-%m-%d"), "</date>",
"  </parametros>"
)
source('D:/Projetos/financial-databases-training/Aulas/ServidorWS.R')
library(httr)
library(jsonlite)
library(XML)
#####################################################
# EXEMPLO XML
name = "juros"
dt = as.Date("2018-07-15")
# POST XML
xml.in = paste0(
"  <parametros>",
"    <name>", name, "</name>",
"    <date>", format(dt, "%Y-%m-%d"), "</date>",
"  </parametros>"
)
r = POST(
url = "http://localhost:9455/movimentos/XML",
body = xml.in
)
txt = content(r, as = "text")
print(txt)
xml.out = xmlParseString(txt)
dados = xmlToDataFrame(xml.out, stringsAsFactors = F)
dados$id = as.integer(dados$id)
dados$quantidade = as.integer(dados$quantidade)
dados$data = as.Date(dados$data, "%Y-%m-%d")
print(dados)
xml.in
xml.out
?POST
str(dados)
?fromJSON
xmlGetValor = function(idSerie, data) {
stopifnot(
is.integer(numeric),
length(id) == 1,
is(data, "Date"),
length(data) == 1
)
paste0(
'<?xml version=\"1.0\"?>',
'<SOAP-ENV:ENVELOPE xmins:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelpe/\" xmlns:xsi=\"http://www.w3.or/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.or/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">',
'<SOAP-ENV:Body>',
'<getValor xmlns="http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br\">',
'<in1 xsi:type=\"xsd:long\">', idSerie, '</in1>',
'<in2 xsi:type=\"xsd:string\">', format(data, "%d/%m/%Y"), '</in2>',
'</getValor>',
'</SOAP-ENV:Body>',
'</SOAP-ENV:ENVELOPE>'
)
}
source('~/.active-rstudio-document')
xmlGetValor(24363L, Sys.Date())
source('~/.active-rstudio-document')
xmlGetValor(24363L, Sys.Date())
source('~/.active-rstudio-document')
xmlGetValor(24363L, Sys.Date())
id = 24363L
data = Sys.Date() - 1
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
body = xmlGetValor(id, data)
)
View(req)
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor"
),
body = xmlGetValor(id, data)
)
View(req)
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
source('~/.active-rstudio-document')
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
data = "2018-01-01"
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
data = as.Date("2018-01-01")
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
source('~/.active-rstudio-document')
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
library(httr)
xmlGetValor = function(idSerie, data) {
stopifnot(
is.integer(idSerie),
length(idSerie) == 1,
is(data, "Date"),
length(data) == 1
)
return(paste0(
'<?xml version=\"1.0\"?>',
'<SOAP-ENV:ENVELOPE xmins:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelpe/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">',
'<SOAP-ENV:Body>',
'<getValor xmlns="http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br\">',
'<in1 xsi:type=\"xsd:long\">', idSerie, '</in1>',
'<in2 xsi:type=\"xsd:string\">', format(data, "%d/%m/%Y"), '</in2>',
'</getValor>',
'</SOAP-ENV:Body>',
'</SOAP-ENV:ENVELOPE>'
))
}
id = 24363L
data = as.Date("2018-01-01")
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
library(httr)
xmlGetValor = function(idSerie, data) {
stopifnot(
is.integer(idSerie),
length(idSerie) == 1,
is(data, "Date"),
length(data) == 1
)
return(paste0(
'<?xml version=\"1.0\"?>',
'<SOAP-ENV:Envelope xmins:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelpe/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">',
'<SOAP-ENV:Body>',
'<getValor xmlns="http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br\">',
'<in1 xsi:type=\"xsd:long\">', idSerie, '</in1>',
'<in2 xsi:type=\"xsd:string\">', format(data, "%d/%m/%Y"), '</in2>',
'</getValor>',
'</SOAP-ENV:Body>',
'</SOAP-ENV:Envelope>'
))
}
id = 24363L
data = as.Date("2018-01-01")
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
source('~/.active-rstudio-document')
library(httr)
xmlGetValor = function(idSerie, data) {
stopifnot(
is.integer(idSerie),
length(idSerie) == 1,
is(data, "Date"),
length(data) == 1
)
return(paste0(
'<?xml version=\"1.0\"?>',
'<SOAP-ENV:Envelope xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">',
'<SOAP-ENV:Body>',
'<getValor xmlns="http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br\">',
'<in1 xsi:type=\"xsd:long\">', idSerie, '</in1>',
'<in2 xsi:type=\"xsd:string\">', format(data, "%d/%m/%Y"), '</in2>',
'</getValor>',
'</SOAP-ENV:Body>',
'</SOAP-ENV:Envelope>'
))
}
id = 24363L
data = as.Date("2018-01-01")
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
View(req)
library(XML)
doc = xmlParseString(txt)
txt = content(r, as = "text")
doc = xmlParseString(txt)
txt = content(r, as = "text")
txt = content(req, as = "text")
doc = xmlParseString(txt)
library(httr)
library(XML)
xmlGetValor = function(idSerie, data) {
stopifnot(
is.integer(idSerie),
length(idSerie) == 1,
is(data, "Date"),
length(data) == 1
)
return(paste0(
'<?xml version=\"1.0\"?>',
'<SOAP-ENV:Envelope xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">',
'<SOAP-ENV:Body>',
'<getValor xmlns="http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br\">',
'<in1 xsi:type=\"xsd:long\">', idSerie, '</in1>',
'<in2 xsi:type=\"xsd:string\">', format(data, "%d/%m/%Y"), '</in2>',
'</getValor>',
'</SOAP-ENV:Body>',
'</SOAP-ENV:Envelope>'
))
}
id = 24363L
data = as.Date("2018-01-01")
req = POST(
url = "https://www3.bcb.gov.br/wssgs/services/FachadaWSSGS",
add_headers(
SOAPAction = "\"http://publico.ws.casosdeuso.sgs.pec.bcb.gov.br#getValor\""
),
body = xmlGetValor(id, data)
)
doc = xmlParse(rawToChar(req$content), asText = T)
root = xmlRoot(doc)
xmlElementsByTagName(root, "multiref")
xmlElementsByTagName(root, "multiref", recursive = T)
node = xmlElementsByTagName(root, "multiref", recursive = T)[[1]]
node = xmlElementsByTagName(root, "multiRef", recursive = T)[[1]]
as.numeric(xmlValue(node))
source('D:/Projetos/financial-databases-training/Práticas/SGS_Bacen.R')
lerBacen(id, data)
source('D:/Projetos/financial-databases-training/Práticas/SGS_Bacen.R')
lerBacen(id, data)
source('D:/Projetos/financial-databases-training/Práticas/SGS_Bacen.R')
lerBacen(12L, data)
lerBacen(4391L, data)
